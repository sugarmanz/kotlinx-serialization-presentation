(this["webpackJsonpkotlinx-serialization-presentation"]=this["webpackJsonpkotlinx-serialization-presentation"]||[]).push([[0],{28:function(e,t,a){e.exports=a(59)},33:function(e,t,a){},59:function(e,t,a){"use strict";a.r(t);var l=a(0),n=a.n(l),i=a(16),r=a.n(i),o=(a(33),a(25)),s=a(5),c=a(24),m="https://sugarmanz.github.io/kotlinx-serialization-presentation/",u=function(e){var t=e.title,a=e.description,l=e.icon;return n.a.createElement("div",{className:"mb-8 flex items-start last:mb-0"},n.a.createElement("div",{className:"rounded bg-yellow-500 p-3 text-yellow-100 mr-5"},n.a.createElement(c.a,{height:24,icon:l})),n.a.createElement("div",null,n.a.createElement("h3",{className:"text-xl font-semibold mb-2"},t),n.a.createElement("p",{className:"text-lg text-gray-700"},a)))},d=function(e){var t,a=e.href,l=Object(o.a)(e,["href"]);return n.a.createElement("a",{href:a},n.a.createElement("span",Object.assign({className:"text-".concat(null!==(t=l.color)&&void 0!==t?t:"blue","-600 font-semibold underline")},l)))},x=function(e){var t=e.children,a=e.className,l=e.color,i=void 0===l?"purple":l;return n.a.createElement("span",{className:"text-".concat(i,"-500 font-semibold ").concat(a)},t)},f=function(e){e.number;var t=e.label,a=e.image,l=e.links,i=e.children;return n.a.createElement("div",{className:"flex items-center justify-center flex-col mb-8 w-full h-full"},n.a.createElement("div",{className:"pr-4 mb-6 text-5xl text-gray-900 mx-20 text-center"},t),i,n.a.createElement("img",{alt:"",className:"max-w-4xl border-2 border-gray-300 rounded-lg h-auto",src:"".concat(m,"/").concat(a),style:{maxHeight:500}}),n.a.createElement("br",null),l&&n.a.createElement("div",{className:"flex flex-col max-w-4xl justify-left items-left text-2xl"},l.map((function(e){return n.a.createElement("div",null,n.a.createElement(x,null,"- ",e))}))))},h=function(){return n.a.createElement("div",{className:"bg-indigo-600 w-full h-full flex justify-center flex-col items-center text-center absolute",style:{margin:-32}},n.a.createElement("h1",{className:"text-6xl font-bold text-white"},"Kotlin Serialization"),n.a.createElement("p",{className:"text-2xl text-purple-200 font-light"},"With all the existing JVM serialization frameworks, why"," ",n.a.createElement(d,{href:"https://github.com/kotlin/kotlinx.serialization",color:"yellow"},"kotlinx.serialization"),"?"))},g=function(){return n.a.createElement("div",{className:"mt-10 lg:mb-24 text-center flex items-center justify-center flex-col h-full"},n.a.createElement("h2",{className:"text-purple-900 text-4xl mb-12 mx-32 font-semibold"},"Choosing a serialization framework can be tricky"),n.a.createElement("p",{className:"max-w-2xl text-2xl text-gray-700"},"From my own experience, this usually ends up being an opinionated decision, heavily favoring whatever solution the team is most experienced with. Recently, I've had the opportunity to explore the idiomatic approach to serialization in ",n.a.createElement(x,null,"Kotlin")," and am excited to share my learnings!"))},p=function(e){var t=e.children;return n.a.createElement("p",{className:"text-lg text-gray-700 mb-6"},t)},b=function(){return n.a.createElement("div",{className:"mt-10 lg:mb-24 flex items-center justify-center flex-col h-full"},n.a.createElement("h2",{className:"text-purple-900 text-4xl mb-12 mx-32 font-semibold"},"Why ",n.a.createElement(x,{color:"yellow"},"kotlinx.serialization"),"?"),n.a.createElement("div",{className:"h-full flex justify-around items-center flex-row text-gray-900"},n.a.createElement("div",{className:"flex-1 lg:px-12"},n.a.createElement(u,{title:"Idiomatic Kotlin Serialization",description:"Fully supports and enforces the Kotlin type system, making sure only valid objects can be deserialized"}),n.a.createElement(u,{title:"Multiplatform",description:"Share data models and serializers between backend, frontend, and anywhere inbetween"}),n.a.createElement(u,{title:"Multiformat",description:"Official JSON, HOCON, ProtoBuf, CBOR, and Properties formats. Many community-driven formats, i.e. YAML, XML, SharedPreferences, even Minecraft NBT"}),n.a.createElement(u,{title:"Compiler Plugin",description:"Reduce overhead, while still providing strictly typed, accurate serializers"})),n.a.createElement("div",{className:"flex-1 px-12 mb-20 lg:mb-0"},n.a.createElement("img",{src:"".concat(m,"/tenets.png"),alt:"basic serialization",className:"border border-grey-600 rounded-lg p-4 shadow-md",style:{maxHeight:500}}))))},E=function(e){var t=e.name,a=e.subtopics,l=void 0===a?[]:a;return n.a.createElement("div",{className:"bg-indigo-600 w-full h-full flex justify-center flex-col items-center absolute",style:{margin:-32}},n.a.createElement("h1",{className:"text-6xl font-bold text-white"},t),n.a.createElement("p",{className:"text-2xl text-yellow-500 font-semibold"},n.a.createElement("ul",null,l.map((function(e){return n.a.createElement("li",null,"- ",e)})))))},y=function(){return n.a.createElement("div",{className:"bg-indigo-600 w-full h-full flex justify-center flex-col items-center text-center absolute",style:{margin:-32}},n.a.createElement("h1",{className:"text-6xl font-bold text-white"},"Questions?"),n.a.createElement("p",{className:"text-2xl text-purple-200 font-light"},"Slides are posted to ",n.a.createElement(d,{href:"https://sugarmanz.github.io/kotlinx-serialization-presentation",color:"yellow"},"https://sugarmanz.github.io/kotlinx-serialization-presentation")))};var z=function(){return n.a.createElement(s.d,null,n.a.createElement(s.n,null,n.a.createElement(h,null)),n.a.createElement(s.n,{backgroundColor:"white"},n.a.createElement(g,null)),n.a.createElement(s.n,{backgroundColor:"white"},n.a.createElement(b,null)),n.a.createElement(s.n,null,n.a.createElement(E,{name:"Kotlinx Serialization",subtopics:["Basics","Custom Serializers","Formats"]})),n.a.createElement(s.n,{backgroundColor:"white"},n.a.createElement(f,{label:"Basics",image:"pipeline.png",links:[n.a.createElement(d,{href:"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serialization-guide.md"},"Serialization guide")]},n.a.createElement(p,null,"The distinction between serialization and encoding is important"))),n.a.createElement(s.n,{backgroundColor:"white"},n.a.createElement(f,{label:"Serializers",image:"tenets.png",links:[n.a.createElement(d,{href:"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/builtin-classes.md#builtin-classes"},"Builtin serializers"),n.a.createElement(d,{href:"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serializers.md#plugin-generated-serializer"},"Plugin generated serializers"),n.a.createElement(d,{href:"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serializers.md#plugin-generated-generic-serializer"},"Generic serializers")]})),n.a.createElement(s.n,{backgroundColor:"white"},n.a.createElement(f,{label:"Custom serializers",image:"custom-serializer.png",links:[n.a.createElement(d,{href:"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serializers.md#custom-serializers"},"Custom serializers")]},n.a.createElement(p,null,"Custom serializers require a bit more knowledge of encoding procedure"))),n.a.createElement(s.n,null,n.a.createElement(E,{name:"Polymorphic Serialization"})),n.a.createElement(s.n,null,n.a.createElement(E,{name:"Bonus",subtopics:["package.json","JS runtime ORM"]})),n.a.createElement(s.n,null,n.a.createElement(y,null)))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(z,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[28,1,2]]]);
//# sourceMappingURL=main.8c8b9645.chunk.js.map